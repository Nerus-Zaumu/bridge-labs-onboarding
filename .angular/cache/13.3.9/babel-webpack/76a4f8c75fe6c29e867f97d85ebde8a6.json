{"ast":null,"code":"import _asyncToGenerator from \"/home/yimnai/Portfolio Projects/bridge-labs-onboarding/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, catchError, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { User } from './user/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"angular-notifier\";\nexport class UserService {\n  constructor(http, router, notifierService) {\n    this.http = http;\n    this.router = router;\n    this.notifierService = notifierService;\n    this.expiresIn = \"3600\";\n    this.bridgeUser = new BehaviorSubject(null);\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      first_name: new FormControl('', Validators.required),\n      last_name: new FormControl('', Validators.required),\n      phone: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(7)]),\n      avatar: new FormControl('', Validators.required)\n    });\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(7)])\n    });\n  } //Form Validators\n\n\n  formValidator(form) {\n    let result = false;\n    form.invalid && form.dirty && form.touched ? result = true : result = false;\n    return result;\n  }\n\n  wrongEmail(form) {\n    var _a, _b, _c;\n\n    let result = false;\n    ((_a = form.get('email')) === null || _a === void 0 ? void 0 : _a.hasError('email')) && ((_b = form.get('email')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('email')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n    return result;\n  }\n\n  requiredEmail(form) {\n    var _a, _b, _c;\n\n    let result = false;\n    ((_a = form.get('email')) === null || _a === void 0 ? void 0 : _a.hasError('required')) && ((_b = form.get('email')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('email')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n    return result;\n  }\n\n  wrongPassword(form) {\n    var _a, _b, _c;\n\n    let result = false;\n    ((_a = form.get('password')) === null || _a === void 0 ? void 0 : _a.hasError('minlength')) && ((_b = form.get('password')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('password')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n    return result;\n  }\n\n  requiredPassword(form) {\n    var _a, _b, _c;\n\n    let result = false;\n    ((_a = form.get('password')) === null || _a === void 0 ? void 0 : _a.hasError('required')) && ((_b = form.get('password')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('password')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n    return result;\n  } //Http Actions\n\n\n  register() {\n    var _a, _b, _c, _d, _e, _f;\n\n    const userInfo = {\n      email: (_a = this.signupForm.get('email')) === null || _a === void 0 ? void 0 : _a.value,\n      first_name: (_b = this.signupForm.get('first_name')) === null || _b === void 0 ? void 0 : _b.value,\n      last_name: (_c = this.signupForm.get('last_name')) === null || _c === void 0 ? void 0 : _c.value,\n      phone: (_d = this.signupForm.get('phone')) === null || _d === void 0 ? void 0 : _d.value,\n      password: (_e = this.signupForm.get('password')) === null || _e === void 0 ? void 0 : _e.value,\n      avatar: (_f = this.signupForm.get('avatar')) === null || _f === void 0 ? void 0 : _f.value\n    };\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.http.post(`${environment.BASE_URL}/api/user/register`, userInfo, {\n      headers: headers\n    }).pipe(catchError(error => {\n      this.errorMessage = error.message;\n      this.notifierService.notify('failure', this.errorMessage);\n      return throwError(() => error);\n    }), tap(user => {\n      this.handleAuthentication(user.id, user.email, user.token, +this.expiresIn);\n    })).subscribe(response => {\n      if (response) {\n        this.notifierService.notify('success', 'Successfully created account!');\n        this.signupForm.reset();\n        this.router.navigate(['/users/auth/login']);\n      }\n    });\n  }\n\n  login() {\n    var _a, _b;\n\n    const user = {\n      email: (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value,\n      password: (_b = this.loginForm.get('password')) === null || _b === void 0 ? void 0 : _b.value\n    };\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n    this.http.post(`${environment.BASE_URL}/api/user/login`, user, {\n      headers: headers\n    }).pipe(catchError(error => {\n      this.errorMessage = error.message;\n      this.notifierService.notify('failure', this.errorMessage);\n      return throwError(() => {});\n    }), tap(user => {\n      this.first_name = user.first_name, this.last_name = user.last_name, this.handleAuthentication(user.id, user.email, user.token, +this.expiresIn);\n    })).subscribe(user => {\n      this.notifierService.notify('success', 'Successfully logged in!');\n      this.loginForm.reset();\n      this.router.navigate(['/dashboard/home']);\n    });\n  }\n\n  logout() {\n    this.bridgeUser.next(null);\n    this.notifierService.notify('success', 'You have logged out!');\n    this.router.navigate(['/landing-page']);\n    localStorage.removeItem('bridgeUserData');\n\n    if (this.sessionExpirationTimer) {\n      clearTimeout(this.sessionExpirationTimer);\n    }\n\n    this.sessionExpirationTimer = null;\n  }\n\n  autoLogout(expirationLength) {\n    this.sessionExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationLength);\n  }\n\n  autoLogin() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const userData = JSON.parse(localStorage.getItem(\"bridgeUserData\"));\n\n      if (!userData) {\n        return;\n      }\n\n      const currentUser = new User(userData.id, userData.email, userData._token, new Date(userData._tokenExpirationDate));\n\n      if (currentUser.token) {\n        _this.userId = currentUser.token;\n        _this.userEmail = currentUser.email;\n\n        _this.bridgeUser.next(currentUser);\n\n        let expirationDuration = 0;\n\n        if (!userData._tokenExpirationDate) {\n          expirationDuration = 36000 * 1000;\n        } else {\n          expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n        }\n\n        _this.autoLogout(expirationDuration);\n      }\n    })();\n  }\n\n  handleAuthentication(id, email, token, expiresIn) {\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const bridgeUser = new User(id, email, token, expirationDate);\n    this.bridgeUser.next(bridgeUser);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('bridgeUserData', JSON.stringify(bridgeUser));\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NotifierService));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/yimnai/Portfolio Projects/bridge-labs-onboarding/src/app/user/user.service.ts"],"names":["HttpHeaders","FormControl","FormGroup","Validators","environment","BehaviorSubject","catchError","throwError","tap","User","i0","i1","i2","i3","UserService","constructor","http","router","notifierService","expiresIn","bridgeUser","signupForm","email","required","first_name","last_name","phone","password","minLength","avatar","loginForm","formValidator","form","result","invalid","dirty","touched","wrongEmail","_a","_b","_c","get","hasError","requiredEmail","wrongPassword","requiredPassword","register","_d","_e","_f","userInfo","value","headers","set","post","BASE_URL","pipe","error","errorMessage","message","notify","user","handleAuthentication","id","token","subscribe","response","reset","navigate","login","logout","next","localStorage","removeItem","sessionExpirationTimer","clearTimeout","autoLogout","expirationLength","setTimeout","autoLogin","userData","JSON","parse","getItem","currentUser","_token","Date","_tokenExpirationDate","userId","userEmail","expirationDuration","getTime","expirationDate","setItem","stringify","ɵfac","UserService_Factory","t","ɵɵinject","HttpClient","Router","NotifierService","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":"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","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, catchError, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { User } from './user/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"angular-notifier\";\nexport class UserService {\n    constructor(http, router, notifierService) {\n        this.http = http;\n        this.router = router;\n        this.notifierService = notifierService;\n        this.expiresIn = \"3600\";\n        this.bridgeUser = new BehaviorSubject(null);\n        this.signupForm = new FormGroup({\n            email: new FormControl('', [Validators.required, Validators.email]),\n            first_name: new FormControl('', Validators.required),\n            last_name: new FormControl('', Validators.required),\n            phone: new FormControl('', Validators.required),\n            password: new FormControl('', [Validators.required, Validators.minLength(7)]),\n            avatar: new FormControl('', Validators.required)\n        });\n        this.loginForm = new FormGroup({\n            email: new FormControl('', [Validators.required, Validators.email]),\n            password: new FormControl('', [Validators.required, Validators.minLength(7)])\n        });\n    }\n    //Form Validators\n    formValidator(form) {\n        let result = false;\n        form.invalid && form.dirty && form.touched ? result = true : result = false;\n        return result;\n    }\n    wrongEmail(form) {\n        var _a, _b, _c;\n        let result = false;\n        ((_a = form.get('email')) === null || _a === void 0 ? void 0 : _a.hasError('email')) && ((_b = form.get('email')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('email')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n        return result;\n    }\n    requiredEmail(form) {\n        var _a, _b, _c;\n        let result = false;\n        ((_a = form.get('email')) === null || _a === void 0 ? void 0 : _a.hasError('required')) && ((_b = form.get('email')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('email')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n        return result;\n    }\n    wrongPassword(form) {\n        var _a, _b, _c;\n        let result = false;\n        ((_a = form.get('password')) === null || _a === void 0 ? void 0 : _a.hasError('minlength')) && ((_b = form.get('password')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('password')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n        return result;\n    }\n    requiredPassword(form) {\n        var _a, _b, _c;\n        let result = false;\n        ((_a = form.get('password')) === null || _a === void 0 ? void 0 : _a.hasError('required')) && ((_b = form.get('password')) === null || _b === void 0 ? void 0 : _b.dirty) && ((_c = form.get('password')) === null || _c === void 0 ? void 0 : _c.touched) ? result = true : result = false;\n        return result;\n    }\n    //Http Actions\n    register() {\n        var _a, _b, _c, _d, _e, _f;\n        const userInfo = {\n            email: (_a = this.signupForm.get('email')) === null || _a === void 0 ? void 0 : _a.value,\n            first_name: (_b = this.signupForm.get('first_name')) === null || _b === void 0 ? void 0 : _b.value,\n            last_name: (_c = this.signupForm.get('last_name')) === null || _c === void 0 ? void 0 : _c.value,\n            phone: (_d = this.signupForm.get('phone')) === null || _d === void 0 ? void 0 : _d.value,\n            password: (_e = this.signupForm.get('password')) === null || _e === void 0 ? void 0 : _e.value,\n            avatar: (_f = this.signupForm.get('avatar')) === null || _f === void 0 ? void 0 : _f.value\n        };\n        const headers = new HttpHeaders()\n            .set('Content-Type', 'application/json');\n        this.http.post(`${environment.BASE_URL}/api/user/register`, userInfo, { headers: headers })\n            .pipe(catchError((error) => {\n            this.errorMessage = error.message;\n            this.notifierService.notify('failure', this.errorMessage);\n            return throwError(() => error);\n        }), tap(user => {\n            this.handleAuthentication(user.id, user.email, user.token, +this.expiresIn);\n        })).subscribe(response => {\n            if (response) {\n                this.notifierService.notify('success', 'Successfully created account!');\n                this.signupForm.reset();\n                this.router.navigate(['/users/auth/login']);\n            }\n        });\n    }\n    login() {\n        var _a, _b;\n        const user = {\n            email: (_a = this.loginForm.get('email')) === null || _a === void 0 ? void 0 : _a.value,\n            password: (_b = this.loginForm.get('password')) === null || _b === void 0 ? void 0 : _b.value\n        };\n        const headers = new HttpHeaders()\n            .set('Content-Type', 'application/json');\n        this.http.post(`${environment.BASE_URL}/api/user/login`, user, { headers: headers })\n            .pipe(catchError((error) => {\n            this.errorMessage = error.message;\n            this.notifierService.notify('failure', this.errorMessage);\n            return throwError(() => { });\n        }), tap(user => {\n            this.first_name = user.first_name,\n                this.last_name = user.last_name,\n                this.handleAuthentication(user.id, user.email, user.token, +this.expiresIn);\n        })).subscribe(user => {\n            this.notifierService.notify('success', 'Successfully logged in!');\n            this.loginForm.reset();\n            this.router.navigate(['/dashboard/home']);\n        });\n    }\n    logout() {\n        this.bridgeUser.next(null);\n        this.notifierService.notify('success', 'You have logged out!');\n        this.router.navigate(['/landing-page']);\n        localStorage.removeItem('bridgeUserData');\n        if (this.sessionExpirationTimer) {\n            clearTimeout(this.sessionExpirationTimer);\n        }\n        this.sessionExpirationTimer = null;\n    }\n    autoLogout(expirationLength) {\n        this.sessionExpirationTimer = setTimeout(() => {\n            this.logout();\n        }, expirationLength);\n    }\n    async autoLogin() {\n        const userData = JSON.parse(localStorage.getItem(\"bridgeUserData\"));\n        if (!userData) {\n            return;\n        }\n        const currentUser = new User(userData.id, userData.email, userData._token, new Date(userData._tokenExpirationDate));\n        if (currentUser.token) {\n            this.userId = currentUser.token;\n            this.userEmail = currentUser.email;\n            this.bridgeUser.next(currentUser);\n            let expirationDuration = 0;\n            if (!userData._tokenExpirationDate) {\n                expirationDuration = 36000 * 1000;\n            }\n            else {\n                expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\n            }\n            this.autoLogout(expirationDuration);\n        }\n    }\n    handleAuthentication(id, email, token, expiresIn) {\n        const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n        const bridgeUser = new User(id, email, token, expirationDate);\n        this.bridgeUser.next(bridgeUser);\n        this.autoLogout(expiresIn * 1000);\n        localStorage.setItem('bridgeUserData', JSON.stringify(bridgeUser));\n    }\n}\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.NotifierService)); };\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}